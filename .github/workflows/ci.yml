name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      mongo:
        image: mongo:7
        options: >-
          --health-cmd="mongosh --quiet --eval 'db.adminCommand({ ping: 1 }).ok' || exit 1"
          --health-interval=5s --health-timeout=5s --health-retries=30


    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install pip-tools (pinned)
        run: python -m pip install -U pip setuptools wheel "pip-tools==7.4.1"

      - name: Recompile and verify requirements are up to date
        env:
          CUSTOM_COMPILE_COMMAND: "pip-compile (CI standardized)"
        run: |
          pip-compile --no-header --no-annotate --strip-extras \
            -o requirements.txt requirements.in
          if [ -f requirements-dev.in ]; then
            pip-compile --no-header --no-annotate --strip-extras \
              -o requirements-dev.txt requirements-dev.in
          fi
          git diff --exit-code -- requirements*.txt

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps (dev)
        run: |
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          else
            pip install -r requirements.txt
          fi

      - name: Lint (ruff) & Format check (black)
        run: |
          ruff check .
          black --check .

      - name: Type-check (mypy)
        run: mypy app

      - name: Run tests
        env:
          USE_DB: "1"
          MONGO_DSN: "mongodb://localhost:27017/test_db"
          PYTHONPATH: ${{ github.workspace }}   # ðŸ‘ˆ makes `app/` importable
        run: |
          pytest -q --maxfail=1
