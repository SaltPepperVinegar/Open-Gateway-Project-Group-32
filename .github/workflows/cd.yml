name: CD

on:
  push:
    branches: [ main ]
    tags: ["v*.*.*"]
  pull_request:

  
env:
  IMAGE_NAME: open-gateway-project-backend
  REGISTRY: ghcr.io
  GHCR_NAMESPACE: ${{ github.repository_owner }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch, optional)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version info
        id: vars
        run: |
          SHA_TAG=${GITHUB_SHA::7}
          echo "sha_tag=${SHA_TAG}" >> "$GITHUB_OUTPUT"
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "version_tag=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"
          else
            echo "version_tag=" >> "$GITHUB_OUTPUT"
          fi
          
      # Compute lowercase + tags
      - name: Compute image vars
        id: vars
        shell: bash
        run: |
          # Use env or defaults, but force lowercase for registry/namespace/image
          REGISTRY="${REGISTRY:-ghcr.io}"
          NAMESPACE="${GHCR_NAMESPACE:-${GITHUB_REPOSITORY_OWNER}}"
          IMAGE="${IMAGE_NAME:-open-gateway-project-backend}"

          echo "registry=$(echo "$REGISTRY" | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"
          echo "namespace=$(echo "$NAMESPACE" | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"
          echo "image=$(echo "$IMAGE" | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"

          # short SHA tag
          echo "sha_tag=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

          # optional version tag only on tag refs
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "version_tag=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"
          else
            echo "version_tag=" >> "$GITHUB_OUTPUT"
          fi

      # Build & push (sha + latest)
      - name: Build & push (sha + latest)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ steps.vars.outputs.registry }}/${{ steps.vars.outputs.namespace }}/${{ steps.vars.outputs.image }}:${{ steps.vars.outputs.sha_tag }}
            ${{ steps.vars.outputs.registry }}/${{ steps.vars.outputs.namespace }}/${{ steps.vars.outputs.image }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build & push (version tag) â€” only when a git tag triggered the workflow
      - name: Build & push (version tag)
        if: ${{ steps.vars.outputs.version_tag != '' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ steps.vars.outputs.registry }}/${{ steps.vars.outputs.namespace }}/${{ steps.vars.outputs.image }}:${{ steps.vars.outputs.version_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
